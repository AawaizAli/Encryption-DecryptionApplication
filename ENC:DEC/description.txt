Project Description: Encryption Algorithm Implementation

This project implements a few encryption algorithms in C++, namely Atbash Cipher, Caesar Cipher, and Vigenere Cipher. These algorithms can be used to encrypt a given plaintext into a ciphertext and decrypt a given ciphertext into a plaintext. The plaintext and ciphertext along with the username are stored in two separate text files, encrypted.txt and decrypted.txt, respectively.

The project starts with the DecorativeLines() function, which prints a few decorative lines to the console. Then, there are three classes that implement the three encryption algorithms: AtbashCipher, CaesarCipher, and VigenereCipher. All three classes inherit from a base class called EncryptionAlgorithm, which defines two virtual functions: encrypt() and decrypt(). Each of these functions takes two parameters: the plaintext or ciphertext to be encrypted or decrypted and the username of the user who is performing the operation. The functions return the resulting ciphertext or plaintext.

The AtbashCipher class implements the Atbash Cipher encryption algorithm. The algorithm replaces each letter in the plaintext with its corresponding letter in the alphabet, but in reverse order. For example, 'A' becomes 'Z', 'B' becomes 'Y', and so on. If a character is not a letter, it is left unchanged. The encrypted text is then written to the encrypted.txt file along with the plaintext and the username. To decrypt the ciphertext, the algorithm applies the same encryption logic to the ciphertext.

The CaesarCipher class implements the Caesar Cipher encryption algorithm. The algorithm shifts each letter in the plaintext by a fixed number of positions, called the key. For example, if the key is 3, 'A' becomes 'D', 'B' becomes 'E', and so on. If a character is not a letter, it is left unchanged. The encrypted text is then written to the encrypted.txt file along with the plaintext and the username. To decrypt the ciphertext, the algorithm applies the opposite shift to the ciphertext.

The VigenereCipher class implements the Vigenere Cipher encryption algorithm. The algorithm uses a keyword to encrypt the plaintext. Each letter of the keyword is used to shift the corresponding letter in the plaintext. For example, if the keyword is "CAT", the first letter of the plaintext is shifted by 2 positions ('C' is the third letter of the alphabet, so 'A' becomes 'C', 'B' becomes 'D', and so on), the second letter of the plaintext is shifted by 0 positions ('A' is the first letter of the alphabet, so 'A' becomes 'A', 'B' becomes 'B', and so on), and the third letter of the plaintext is shifted by 19 positions ('T' is the twentieth letter of the alphabet, so 'A' becomes 'T', 'B' becomes 'U', and so on). If a character is not a letter, it is left unchanged. The encrypted text is then written to the encrypted.txt file along with the plaintext and the username. To decrypt the ciphertext, the algorithm applies the opposite shift to the ciphertext.

Overall, this project provides a set of encryption algorithms that can be used to secure sensitive data. The encrypted data is stored in a file along with the plaintext and the username of the user who performed the encryption, making it possible to track who accessed the data.
